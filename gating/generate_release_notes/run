#!/bin/bash

# The release notes generated by this step are used when releasing a new version
# of the project. The releases should document the changes between the next
# version and the latest released.

# run is a required executable that executes the purpose of the job. For
# example, if the project deploys some software, this file would be used to
# perform the deployment and then test the success of the operation.

# Environment variables
# RE_HOOK_VERSION: The version that is being released, e.g. 1.2.0.
# RE_HOOK_PREVIOUS_VERSION: The version to compare against, e.g. 1.1.0.
# RE_HOOK_RELEASE_NOTES: The file where release notes should be written. The
# release notes should be formatted with GitHub-flavoured Markdown.
# RE_HOOK_REPO_HTTP_URL: The URL for the repository being released e.g.
# https://github.com/rcbops/rpc-openstack.git.

# This script is called by Jenkins to generate release notes.

# The resulting notes must be written to $WORKSPACE/artifacts/release_notes

export PREVIOUS_TAG=${RE_HOOK_PREVIOUS_VERSION}
export NEW_TAG=${RE_HOOK_VERSION}
export REPO_URL=${RE_HOOK_REPO_HTTP_URL}

apt-get install -y pandoc

pip install reno==2.5.1

gating/generate_release_notes/generate_release_notes.sh

cp all_notes.md "${RE_HOOK_RELEASE_NOTES}"
